@model TicketCore.ViewModels.Notices.EditNoticeViewModel

@{
    ViewBag.PageName = "Notice";
}

<form asp-controller="Notice" asp-antiforgery="true" asp-action="Edit" method="post">
    <input asp-for="NoticeId" type="hidden" />
    
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Edit</h3>
        </div>
        <div class="card-body register-card-body">
            <div class="text-danger" asp-validation-summary="ModelOnly"></div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label class="mandatory" asp-for="NoticeTitle"></label>
                    <input asp-for="NoticeTitle" placeholder="Enter FullName" class="form-control" />
                    <span class="text-danger" asp-validation-for="NoticeTitle"></span>
                </div>
                <div class="form-group col-md-4">
                    <label class="mandatory" asp-for="NoticeStart"></label>
                    <input disabled="disabled" asp-for="NoticeStart" placeholder="Enter Notice Start Date" class="form-control" />
                    <span class="text-danger" asp-validation-for="NoticeStart"></span>
                </div>
                <div class="form-group col-md-4">
                    <label class="mandatory" asp-for="NoticeEnd"></label>
                    <input disabled="disabled" asp-for="NoticeEnd" placeholder="Enter Notice End Date " class="form-control" />
                    <span class="text-danger" asp-validation-for="NoticeEnd"></span>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-12">
                    <label class="mandatory" asp-for="NoticeBody"></label>
                    <textarea asp-for="NoticeBody" class="form-control"></textarea>
                    <span class="text-danger" asp-validation-for="NoticeBody"></span>
                </div>
            </div>
            <div class="form-row">
                <div class="form-check">
                    <input type="checkbox" asp-for="Status" class="form-check-input" />
                    <label class="form-check-label" asp-for="Status">Active</label>
                    <span class="text-danger" asp-validation-for="Status"></span>
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button class="btn btn-success" id="btnsubmit" name="btnsubmit" type="submit"> Save</button>
            <a asp-area="Administration" class="btn btn-danger" asp-controller="Notice" asp-action="Create">Clear</a>
            <a asp-area="Administration" class="btn btn-primary" asp-controller="Notice" asp-action="Index">List</a>
        </div>
    </div>
</form>








@section scripts{
    <link href="~/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <script src="~/plugins/moment/moment.min.js"></script>
    <script src="~/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="https://cdn.ckeditor.com/4.15.1/standard/ckeditor.js"></script>
    <script>


        $(document).ready(function () {

            var startDateTextBox = $('#NoticeStart');
            var endDateTextBox = $('#NoticeEnd');

            startDateTextBox.daterangepicker({
                timePicker: true,
                singleDatePicker: true,
                autoUpdateInput: true,
                emptyInitUpdate: false,
                minDate: moment(),
                locale: {
                    format: 'YYYY-MM-DD HH:mm:ss'
                }
            });

            startDateTextBox.on('apply.daterangepicker', function (ev, picker) {
                $('#NoticeEnd').val('');
                endDateTextBox.daterangepicker({
                    timePicker: true,
                    singleDatePicker: true,
                    autoUpdateInput: true,
                    emptyInitUpdate: false,
                    minDate: picker.endDate.format('YYYY-MM-DD HH:mm:ss'),
                    locale: {
                        format: 'YYYY-MM-DD HH:mm:ss'
                    }
                });

                $('#NoticeEnd').val('');
                $('#NoticeEnd').data('daterangepicker').setStartDate(picker.endDate.format('YYYY-MM-DD HH:mm:ss'));
            });

        });

        CKEDITOR.replace('NoticeBody',
            {
                on:
                {
                    instanceReady: function (ev) {
                        this.dataProcessor.writer.setRules('*',
                            {
                                indent: false,
                                breakBeforeOpen: false,
                                breakAfterOpen: false,
                                breakBeforeClose: false,
                                breakAfterClose: false
                            });
                    }
                }
            });


        CKEDITOR.editorConfig = function (config) {
            config.autoParagraph = false;
            config.fullPage = true;
            config.allowedContent = true;
            config.ignoreEmptyParagraph = true;
            config.tabSpaces = 0;
            config.forcePasteAsPlainText = true;
            config.enterMode = CKEDITOR.ENTER_DIV;
            config.basicEntities = false;
        };




    </script>

}
