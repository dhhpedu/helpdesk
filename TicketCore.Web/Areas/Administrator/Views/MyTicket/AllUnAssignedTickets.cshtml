@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common
@using TicketCore.Web.Resources
@inject LocalizationService LocalizationService
@model TicketCore.ViewModels.Tickets.Grids.AdministratorTicketGrid



<form autocomplete="off" asp-controller="MyTicket" id="frmSearch" enctype="multipart/form-data" asp-action="AllUnAssignedTickets" method="get">

    <div class="card card-secondary card-outline">
        <div class="card-header">
            <h3 class="card-title"> <i class="fas fa-filter"></i> @LocalizationService.GetLocalizedHtmlString("UnAssignedTickets")</h3>
        </div>
        <!-- /.card-header -->
        <!-- form start -->

        <div class="card-body register-card-body">
            <div class="text-danger" asp-validation-summary="ModelOnly"></div>
            <div class="form-row">
                <div class="form-group col-md-3">
                    <label class="mandatory" asp-for="DepartmentId"></label>
                    <select asp-for="DepartmentId" class="form-control"
                            asp-items="@(new SelectList(Model.ListofDepartment, "Value", "Text"))">
                    </select>
                    <span class="text-danger" asp-validation-for="DepartmentId"></span>
                </div>
                <div class="form-group col-md-3">
                    <label class="mandatory" asp-for="StatusId"></label>
                    <select asp-for="StatusId" class="form-control"
                            asp-items="@(new SelectList(Model.ListofStatus, "Value", "Text"))">
                    </select>
                    <span class="text-danger" asp-validation-for="StatusId"></span>
                </div>
                <div class="form-group col-md-3">
                    <label class="mandatory" asp-for="PriorityId"></label>
                    <select asp-for="PriorityId" class="form-control"
                            asp-items="@(new SelectList(Model.ListofPriority, "Value", "Text"))">
                    </select>
                    <span class="text-danger" asp-validation-for="PriorityId"></span>
                </div>
                <div class="form-group col-md-3">
                    <label class="mandatory" asp-for="AgentsId"></label>
                    <select asp-for="AgentsId" class="form-control"
                            asp-items="@(new SelectList(Model.ListofAgents, "Value", "Text"))">
                    </select>
                    <span class="text-danger" asp-validation-for="AgentsId"></span>
                </div>
                <div class="form-group col-md-3">
                    <label class="mandatory" asp-for="SearchIn"></label>
                    <select asp-for="SearchIn" class="form-control"
                            asp-items="@(new SelectList(Model.ListofSearch, "Value", "Text"))">
                    </select>
                    <span class="text-danger" asp-validation-for="SearchIn"></span>
                </div>
                <div class="form-group col-md-3">
                    <label class="mandatory" asp-for="Search"></label>
                    <input asp-for="Search" placeholder="Nhập từ khóa" class="form-control" />
                    <span class="text-danger" asp-validation-for="Search"></span>
                </div>
            </div>


        </div>
        <div class="card-footer">
            <input id="btnsubmit" class="btn btn-success" type="submit" value="Tìm kiếm" />
            <input id="btnclear" class="btn btn-primary" type="button" value="Hủy" />
        </div>
    </div>
    <div class="card  card-outline">

        <div class="card-body register-card-body">

            @ViewBag.totalticketCount @LocalizationService.GetLocalizedHtmlString("TicketFound")
            <hr />
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>


                        <th>@LocalizationService.GetLocalizedHtmlString("Action")</th>
                        <th>@LocalizationService.GetLocalizedHtmlString("TicketId")</th>
                        <th>@LocalizationService.GetLocalizedHtmlString("TrackingId")</th>
                        <th>@LocalizationService.GetLocalizedHtmlString("Department")</th>
                        <th>@LocalizationService.GetLocalizedHtmlString("Name")</th>
                        <th>@LocalizationService.GetLocalizedHtmlString("Subject")</th>
                        <th>@LocalizationService.GetLocalizedHtmlString("Priority")</th>
                        <th>@LocalizationService.GetLocalizedHtmlString("Status")</th>
                        <th>@LocalizationService.GetLocalizedHtmlString("TicketUpdatedDate")</th>
                    </tr>
                </thead>
                <tbody>

                    @if (Model.ListofTicketDetails.Any())
                    {
                        @foreach (var ticket in Model.ListofTicketDetails)
                        {
                            <tr>
                                <td>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fa fa-cog" aria-hidden="true"></i>
                                        </button>
                                        <div class="dropdown-menu">

                                            <a class="dropdown-item" onclick="assignticket('@ticket.DepartmentId','@ticket.TicketId')" href="javascript:void(0);">Assign Ticket</a>



                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <a asp-area="Administrator" class="btn btn-outline-dark" asp-controller="MyTicketDetails" asp-action="TicketDetails" asp-route-id="@ticket.TicketId">#@ticket.TicketId</a>
                                </td>
                                <td>
                                    @ticket.TrackingId
                                </td>
                                <td>
                                    @ticket.DepartmentName
                                </td>
                                <td>
                                    @ticket.Name
                                </td>
                                <td class="textmerge">
                                    @ticket.Subject
                                </td>
                                <td>
                                    @if (ticket.Priority == "Urgent")
                                    {
                                        <button type="button" class="btn btn-Urgent btn-sm">@ticket.Priority</button>

                                    }
                                    else if (ticket.Priority == "High")
                                    {
                                        <button type="button" class="btn btn-High btn-sm">@ticket.Priority</button>

                                    }
                                    else if (ticket.Priority == "Medium")
                                    {
                                        <button type="button" class="btn btn-Medium btn-sm">@ticket.Priority</button>

                                    }
                                    else if (ticket.Priority == "Low")
                                    {
                                        <button type="button" class="btn btn-Low btn-sm">@ticket.Priority</button>
                                    }
                                </td>
                                <td>
                                    @if (ticket.StatusId == 1)
                                    {
                                        <button type="button" class="btn btn-Newx btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 2)
                                    {
                                        <button type="button" class="btn btn-Resolvedx btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 3)
                                    {
                                        <button type="button" class="btn btn-InProgressx btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 4)
                                    {
                                        <button type="button" class="btn btn-OnHoldx btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 5)
                                    {
                                        <button type="button" class="btn btn-Resolvedx btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 6)
                                    {
                                        <button type="button" class="btn btn-Replyx btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 7)
                                    {
                                        <button type="button" class="btn btn-deletedx  btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 8)
                                    {
                                        <button type="button" class="btn btn-Overduex btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 9)
                                    {
                                        <button type="button" class="btn btn-Overduex btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 10)
                                    {
                                        <button type="button" class="btn btn-Overduex btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 11)
                                    {
                                        <button type="button" class="btn btn-darktpurpletimex btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 12)
                                    {
                                        <button type="button" class="btn btn-darktpurpletimex btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 13)
                                    {
                                        <button type="button" class="btn btn-Closedx btn-sm">@ticket.Status</button>
                                    }
                                    else if (ticket.StatusId == 14)
                                    {
                                        <button type="button" class="btn btn-ReOpenedx btn-sm">@ticket.Status</button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-success btn-sm">@ticket.Status</button>
                                    }

                                    @if (ticket.DeleteStatus == true)
                                    {
                                        <button type="button" class="btn btn-deletedx btn-sm">Deleted</button>
                                    }

                                    @if (ticket.EscalationStage2Status == true)
                                    {
                                        <button type="button" class="btn btn-Overdue btn-sm">EscalationStage2</button>

                                    }
                                    @if (ticket.EscalationStage1Status == true)
                                    {
                                        <button type="button" class="btn btn-Overdue btn-sm">EscalationStage1</button>
                                    }
                                    @if (ticket.FirstResponseStatus == true)
                                    {
                                        <button type="button" class="btn btn-Overdue btn-sm">Overdue</button>
                                    }
                                    @if (ticket.ResolutionStatus == true)
                                    {
                                        <button type="button" class="btn btn-Overdue btn-sm">Overdue</button>
                                    }
                                    @if (ticket.EveryResponseStatus == true)
                                    {
                                        <button type="button" class="btn btn-Overdue btn-sm">Overdue</button>
                                    }
                                </td>

                                <td>
                                    @if (ticket.TicketUpdatedDate != null)
                                    {
                                        @ticket.TicketUpdatedDate
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-success btn-sm">Not Assigned</button>
                                    }
                                </td>


                            </tr>
                        }
                        <tr>
                            <td colspan="8">
                                @Html.PagedListPager((IPagedList)Model.ListofTicketDetails,
                                    page => Url.Action("AllUnAssignedTickets", new
                                    {
                                        page = page,
                                        statusId = Model.StatusId,
                                        DepartmentId = Model.DepartmentId,
                                        PriorityId = Model.PriorityId,
                                        search = Model.Search,
                                        searchIn = Model.SearchIn,
                                        agentsId = Model.AgentsId
                                    })
                                    , new PagedListRenderOptions
                                    {
                                        LiElementClasses = new string[] { "page-item" },
                                        PageClasses = new string[] { "page-link" },
                                        Display = PagedListDisplayMode.Always

                                    })
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="7">
                                <i class="far fa-smile"></i>Chưa có phiếu.
                            </td>
                        </tr>
                    }



                </tbody>
            </table>
        </div>
    </div>
</form>
<div class="modal fade" id="modalagent" data-keyboard="false" data-backdrop="static" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    <button type="button" class="btn btn-success">
                        Assign to Agent <span class="badge badge-light"></span>
                    </button>
                </h4>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="modalbody" class="modal-body text-center">

                <div class="form-row">
                    <div class="form-group col-md-12">

                        <label style="text-align: left !important;" for="change_agentId">Agents</label>
                        <select class="form-control" name="change_agentId" id="change_agentId">
                            <option value="">Select</option>
                        </select>
                    </div>
                </div>
                <input type="hidden" id="current_tId" name="current_tId" />
            </div>
            <div class="modal-footer justify-content-end">
                <div class="badge badge-light">
                    <input id="btnAssign" class="btn btn-success" type="button" value="Save" />
                </div>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Scripts{

    <script type="text/javascript">
        $(document).ready(function() {



            $("#btnclear").click(function() {
                $.confirm({
                    title: 'Confirmation!',
                    type: 'green',
                    content: 'Do you want to Clear Filters?',
                    buttons: {
                        confirm: function() {
                            window.location = '/Administrator/MyTicket/AllTickets';
                        },
                        cancel: function() {
                            $.alert('Canceled!');
                        }
                    }
                });
            });


            $("#DepartmentId").change(function() {
                $("#loader").show();
                bindagent();
                $("#loader").hide();
            });


            if ('@Model.AgentsId' !='' )
            {
                $.ajax({
                    type: "POST",
                    url: "/Administrator/MyTicket/GetAgentList",
                    data: { DepartmentId: '@Model.DepartmentId' },
                    dataType: "json",
                    success: function (data, textStatus, xhr)
                    {
                        $("#AgentsId").empty();
                        $.each(data.listofusers,
                            function (i) {
                                var optionhtml = '<option value="' + data.listofusers[i].Value + '">' + data.listofusers[i].Text + '</option>';
                                $("#AgentsId").append(optionhtml);
                            });

                        $("#AgentsId").val('@Model.AgentsId');
                    },
                    error: function(xhr, status, err)
                    {
                        if (xhr.status == 401)
                        {
                            alert('Error');
                            window.location.href = "/Portal/Logout";
                        }

                        if (xhr.status == 500)
                        {
                            alert('Error');
                            window.location.href = "/Portal/Logout";
                        }
                    }
                });



            };

        });

        function bindagent() {
            $.ajax({
                type: "POST",
                url: "/Administrator/MyTicket/GetAgentList",
                data: { DepartmentId: $("#DepartmentId").val() },
                dataType: "json",
                success: function (data, textStatus, xhr) {
                    $("#AgentsId").empty();
                    $.each(data.listofusers,
                        function (i) {
                            var optionhtml = '<option value="' + data.listofusers[i].Value + '">' + data.listofusers[i].Text + '</option>';
                            $("#AgentsId").append(optionhtml);
                        });

                },
                error: function (xhr, status, err) {
                    if (xhr.status == 401) {
                        alert('Error');
                        window.location.href = "/Portal/Logout";
                    }

                    if (xhr.status == 500) {
                        alert('Error');
                        window.location.href = "/Portal/Logout";
                    }
                }
            });
        }

        function assignticket(id,tid)
        {
            if (id == '') {
                $.alert('Please Refresh Page Something Went Wrong.');
            } else {
                bindagentAdmin(id);
                $("#current_tId").val(tid);
            }
        }

        function bindagentAdmin(id) {
            $.ajax({
                type: "POST",
                url: "/Administrator/MyTicket/GetAllAgentandAdminList",
                data: { DepartmentId: id },
                dataType: "json",
                success: function (data, textStatus, xhr) {
                    $("#change_agentId").empty();
                    $.each(data.listofusers,
                        function (i) {
                            var optionhtml = '<option value="' + data.listofusers[i].Value + '">' + data.listofusers[i].Text + '</option>';
                            $("#change_agentId").append(optionhtml);
                        });
                    $("#modalagent").modal("show");
                },
                error: function (xhr, status, err) {
                    if (xhr.status == 401) {
                        alert('Error');
                        window.location.href = "/Portal/Logout";
                    }

                    if (xhr.status == 500) {
                        alert('Error');
                        window.location.href = "/Portal/Logout";
                    }
                }
            });
        }


        $("#btnAssign").click(function () {

            if ($("#change_agentId").val() === '')
            {
                $.alert({
                    title: 'Alert!',
                    content: 'Please Choose Agent or AgentAdmin!',
                    type: 'red'
                });
                return false;
            } else
            {
                $.confirm({
                    title: 'Confirmation!',
                    type: 'green',
                    content: 'Do you want to Assign Agent?',
                    buttons: {
                        confirm: function () {
                            $.ajax({
                                type: "POST",
                                url: "/Administrator/MyTicket/AssignUser",
                                data: {
                                    tId: $("#current_tId").val(),
                                    aId: $("#change_agentId").val()
                                },
                                dataType: "json",
                                success: function (data, textStatus, xhr)
                                {
                                    if (data.status == "validation")
                                    {
                                        $.alert("Cannot Assign to same department!");
                                    }
                                    if (data.status == "success") {
                                        $.confirm({
                                            title: 'Message!',
                                            type: 'green',
                                            content: 'Agent or AgentAdmin Assigned Successfully.',
                                            buttons: {
                                                confirm: function () {
                                                    window.location = '/Administrator/MyTicket/AllUnAssignedTickets';
                                                },
                                                cancel: function () {
                                                    $.alert('Canceled!');
                                                }
                                            }
                                        });
                                    }
                                    if (data.status == "failed") {
                                        $.alert("Something went wrong");
                                    }
                                },
                                error: function (xhr, status, err) {
                                    if (xhr.status == 401) {
                                        alert('Error');
                                        window.location.href = "/Portal/Logout";
                                    }

                                    if (xhr.status == 500) {
                                        alert('Error');
                                        window.location.href = "/Portal/Logout";
                                    }
                                }
                            });
                        },
                        cancel: function () {
                            $.alert('Canceled!');
                        }
                    }
                });
            }

        });
    </script>
}

