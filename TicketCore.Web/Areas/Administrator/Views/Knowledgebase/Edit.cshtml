@model TicketCore.ViewModels.Knowledgebase.EditKnowledgebaseViewModel
@using TicketCore.Web.Resources
@inject LocalizationService LocalizationService
@{
    ViewBag.PageName = "Knowledgebase";

}
<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">@LocalizationService.GetLocalizedHtmlString("EditKnowledgebase")</h3>
        </div>


        <form asp-controller="Knowledgebase" id="kbform" asp-antiforgery="true" enctype="multipart/form-data" asp-action="Edit" method="post">
            <div class="card-body register-card-body">
                <input asp-for="KnowledgebaseId" type="hidden" />
                <input asp-for="KnowledgebaseDetailsId" type="hidden" />
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label class="mandatory" asp-for="DepartmentId"></label>
                        <select asp-for="DepartmentId" class="form-control"
                                asp-items="@(new SelectList(Model.ListofDepartment, "Value", "Text"))">
                        </select>
                        <span class="text-danger" asp-validation-for="DepartmentId"></span>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="mandatory" asp-for="KnowledgebaseTypeId"></label>
                        <select asp-for="KnowledgebaseTypeId" class="form-control"
                                asp-items="@(new SelectList(Model.ListofKnowledgebaseType, "Value", "Text"))">
                        </select>
                        <span class="text-danger" asp-validation-for="KnowledgebaseTypeId"></span>
                    </div>

                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label class="mandatory" asp-for="Subject"></label>
                        <input asp-for="Subject" placeholder="Enter Subject" class="form-control" />
                        <span class="text-danger" asp-validation-for="Subject"></span>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label class="mandatory" asp-for="Contents"></label>
                        <textarea asp-for="Contents" placeholder="Contents" class="form-control" required="required"></textarea>
                        <span class="text-danger" asp-validation-for="Contents"></span>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label class="mandatory" asp-for="Keywords"></label>
                        <input asp-for="Keywords" placeholder="Enter Keywords" class="form-control" />
                        <span class="text-danger" asp-validation-for="Keywords"></span>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label asp-for="Status"></label>
                        <input asp-for="Status" type="checkbox" />
                        <span class="text-danger" asp-validation-for="Status"></span>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-3">
                        <input name="file1" id="file1" onchange="ValidateDocumentFile(this);" type="file" />
                    </div>
                    <div class="form-group col-md-3">
                        <input name="file2" id="file2" onchange="ValidateDocumentFile(this);" type="file" />
                    </div>
                    <div class="form-group col-md-3">
                        <input name="file3" id="file3" onchange="ValidateDocumentFile(this);" type="file" />
                    </div>
                </div>
            </div>
        </form>

        <div class="card-footer">
            <button type="button" id="btnsubmit" class="btn btn-success">Save</button>
            <a asp-area="Administrator" class="btn btn-danger" asp-controller="Knowledgebase" asp-action="Add">Clear</a>
            <a asp-area="Administrator" class="btn btn-primary" asp-controller="Knowledgebase" asp-action="Index">List</a>
        </div>
    </div>
    <div class="card card-cyan card-outline">
        <div class="card-header">
            <h3 class="card-title">@LocalizationService.GetLocalizedHtmlString("TicketAttachment")</h3>
        </div>
        <!-- /.card-header -->
        <!-- form start -->
        <div class="card-body register-card-body">
            <div class="form-row">
                <div class="form-group col-md-6">

                    @if (Model.ListofAttachments != null)
                    {
                        @if (Model.ListofAttachments.Any())
                        {

                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>@LocalizationService.GetLocalizedHtmlString("Attachment")</th>
                                        <th>@LocalizationService.GetLocalizedHtmlString("Download")</th>
                                        <th>@LocalizationService.GetLocalizedHtmlString("Action")</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var attachment in Model.ListofAttachments)
                                    {
                                        <tr>
                                            <td>@attachment.OriginalAttachmentName</td>
                                            <td>
                                                <a class="btn btn-primary"
                                                   data-toggle="tooltip" data-placement="top"
                                                   title="Download Attachment !" onclick="downloadAttachment('@Model.KnowledgebaseId', '@attachment.KnowledgebaseAttachmentsId')" href="javascript:void(0);"> <i class="fa fa-download"></i> Download </a>

                                            </td>
                                            <td>
                                                <a data-toggle="tooltip"
                                                   data-placement="top"
                                                   title="Delete Attachment !"
                                                   class="btn btn-danger" onclick="deleteAttachment('@attachment.KnowledgebaseId', '@attachment.KnowledgebaseAttachmentsId')" href="javascript:void(0);"> <i class="fa fa-trash"></i> Delete </a>
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>

                        }
                        else
                        {
                <p>        @LocalizationService.GetLocalizedHtmlString("NoAttachments")</p>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/js/ckeditor/ckeditor.js"></script>
<script asp-append-version="true" src="~/Scripts/custom/validate.file.js"></script>

@section Scripts{

    <script type="text/javascript">

        $(document).ready(function () {

            $("#btnsubmit").click(function () {
                if ($('#kbform').valid()) {

                    var textboxData = CKEDITOR.instances.Contents.getData();
                    if (textboxData === '') {
                        $.alert({
                            title: 'Validation!',
                            content: 'Enter Contents.',
                            type: 'red'
                        });
                    } else {
                        $.confirm({
                            title: 'Confirmation!',
                            type: 'green',
                            content: 'Do you want to Create Knowledgebase?',
                            buttons: {
                                confirm: function () {
                                    $("#loader").show();
                                    $('#kbform').submit();
                                },
                                cancel: function () {
                                    $.alert('Canceled!');
                                }
                            }
                        });
                    }
                }
            });
        });
        CKEDITOR.replace('Contents', { htmlEncodeOutput: true });


        function downloadAttachment(knowledgebaseId, attachmentsId) {
            window.location = "/Administrator/Knowledgebase/DownloadAttachment?knowledgeId=" + knowledgebaseId + "&AttachmentId=" + attachmentsId;
        }

        function deleteAttachment(knowledgebaseId, AttachmentsId) {
            var result = confirm("Do you want to delete this attachment!");
            if (result === true) {
                if (AttachmentsId != "") {
                    var jsonObject =
                    {
                        knowledgebaseId: knowledgebaseId,
                        AttachmentsId: AttachmentsId
                    };

                    $.ajax({
                        type: "POST",
                        url: "/Administrator/Knowledgebase/DeleteAttachment",
                        dataType: "json",
                        data: jsonObject,
                        success: function (data, textStatus, xhr) {
                            if (data.Status === true) {
                                alert("Attachment Deleted Successfully");
                                location.reload();
                            } else {
                                alert("Something Went Wrong While Deleting Ticket Please Try Again after Sometime!");
                            }

                        },
                        error: function (xhr, status, err) {
                            if (xhr.status == 400) {
                                DisplayModelStateErrors(xhr.responseJSON.ModelState);
                            }
                        }
                    });
                }
            }
        }
    </script>


}